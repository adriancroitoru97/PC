//Adrian-Valeriu Croitoru, 312CA

Problema 1 - ninel
	*se citeste numarul N de copaci si primul dintre acestia (N > 0, deci 		exista cel putin un copac)
	*se va utiliza un proces repetitiv for prin care se vor citi si restul	
	copacilor
	*la fiecare pas se vor avea in vedere perechi de cate 3 copaci, 
	intrucat pentru a determina daca un copac e special, avem nevoie atat de 
	el, cat si de vecinii acestuia
	*pentru a determina daca un copac e special, am definit o functie
	separata
	*daca un copac e special, se va prelucra conform precizarilor din cerinta
	(se va adauga la S, se va afla media aritmetica a tuturor copacilor, etc.
	*in final, se analizeaza cazurile particulare cand nu exista copaci
	speciali, sau exista doar copaci speciali cu indice par, etc.
	
Problema 2 - vectsecv
	*se citeste numarul N
	*se calculeaza diferentele si se stocheaza intr-un vector
	*de fiecare data se verifica vectorul diferentelor, in vederea gasirii
	a doua diferente identice
	*daca s-au gasit 2 astfel de diferente, se opreste structura repetitiva
	for(;;), intrucat problema a fost practic rezolvata
	*daca 2 diferente sunt identice, structura determinata de diferentele
	situate intre acestea (inclusiv prima diferenta identica) determina un
	sir de numere care se va repeta la infinit
	
Problema 3 - codeinvim
	*citeste nr de materii, notele si creditele aferente fiecarei materii
	*se citeste numarul minim de puncte
	*se calculeaza numarul de puncte pe care le are studentul
	*se calculeaza punctele potentiale pe care le mai poate obtine
	*sortez vectorul cu puncte potentiale in mod descrescator
	si incep de la materia cu cel mai mare potential de marire
	*"repar" mediile, iar in momentul in care totalul de puncte depaseste
	pragul minim, ma opresc 
	*afisez numarul de materii "reparate"
	
Problema 4 - nomogram
	*citesc T - puzzle-ul curent 
	*pentru fiecare puzzle, citesc precizarile despre linii, cele despre
	coloane si matricea nonogram-ului
	*verific pe linii, daca e ok verific si pe coloane
	*daca e ok si pe coloane, nonogramul este corect
	*verificarea efectiva:
		*parcurg linia/coloana
		*daca gasesc 1 inseamna ca sunt intr un grup,
		incrementez elementele grupului respectiv
		*daca gasesc 0 si eram intr un grup, verific ca matricea sa se
		potriveasca cu precizarile, daca e ok - continui, altfel ma opresc
		*de fiecare data cand am gasit un grup ok, reinitializez
		variabilele de verificare si reiau procesul pana la sfarsit, sau
		pana gasesc o eroare
